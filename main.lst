main                                                                                                                    PAGE 1
0148 120013              1     call    init_keypad
0003 120149              2     call    init_calculator
                         3
                         4     read:
0006 12014C              5     CALL    read_number
0009 F500                6     MOV     0x00,   A
000B 85F001              7     MOV     0x01,   B
000E 80F6                8     JMP     read
                         9
                        10
                        11
0010 020166             12     jmp ending
                        13     ; Imports
                 =1     14     include 'keypad.asm'
                 =1     15     init_keypad:
  0021           =1     16             last    EQU     0x21
0013 7521FF      =1     17             MOV     last,   #0FFH
0016 22          =1     18             RET
                 =1     19
                 =1     20     ;--------------------------------------------------------------------------
                 =1     21     ; Reads the keypad until a button is pressed
                 =1     22     ; Output:
                 =1     23     ;       A: The value of the pressed button
                 =1     24     ; Values:
                 =1     25     ; 00 - 09 -> Numeric vallues 0-9
                 =1     26     ; 10 | 0001 0000 -> A
                 =1     27     ; 20 | 0010 0000 -> B
                 =1     28     ; 40 | 0100 0000 -> C
                 =1     29     ; 80 | 1000 0000 -> D
                 =1     30     ; F0 | 1111 0000 -> #
                 =1     31     ;--------------------------------------------------------------------------
                 =1     32     read_keypad:
                 =1     33             ; Setup
0017 7590FF      =1     34             MOV     P1,     #0FFH
  0022           =1     35             mask    EQU     0x22
  0023           =1     36             i       EQU     0x23
001A 752304      =1     37             MOV     i,      #4d
001D 7522FE      =1     38             MOV     mask,   #11111110b
                 =1     39             ; Loop i times
                 =1     40     keypad_line_loop:
0020 852290      =1     41             MOV     P1,     mask
                 =1     42
                 =1     43             ; Check wether a key in this line is pressed
0023 E590        =1     44             MOV     A,      P1
0025 54F0        =1     45             ANL     A,      #0F0H
0027 B4F00D      =1     46             CJNE    A, #0F0h, keypad_map_value ; Found a pressed key
                 =1     47
                 =1     48             ; Shift mask one to the left (read next line)
002A E522        =1     49             MOV     A,      mask
002C 23          =1     50             RL      A
002D F522        =1     51             MOV     mask,   A
                 =1     52
                 =1     53             ; Decrement loop counter
002F D523EE      =1     54             DJNZ    i,      keypad_line_loop
                 =1     55             ; No key pressed in this iteration
0032 7521FF      =1     56             MOV     last,   #0FFH
0035 80E0        =1     57             JMP     read_keypad ; Read again
                 =1     58     keypad_map_value:
0037 E590        =1     59             MOV     A,      P1
0039 120044      =1     60             CALL    map_value ; A contains the mapped value now
003C B52102      =1     61             CJNE    A, last, keypad_return ; Read the same value as last time (no change)
003F 80D6        =1     62             JMP     read_keypad
                 =1     63     keypad_return:
0041 F521        =1     64             MOV     last,   A
0043 22          =1     65             RET ; A is a new value, return
                 =1     66
                 =1     67     ;--------------------------------------------------------------------------
                 =1     68     ; Maps value of A to another value listed in "map_table"
                 =1     69     ; input:
                 =1     70     ;       A: The value to map
                 =1     71     ; output:
                 =1     72     ;       A: The mapped value
                 =1     73     ;--------------------------------------------------------------------------
                 =1     74     map_value:
0044 900049      =1     75             MOV     DPTR,   #map_table      ; point DPTR at start of table
                 =1     76             ; A already contains your input byte
0047 93          =1     77             MOVC    A,      @A+DPTR        ; A := map_table[A]
0048 22          =1     78             RET
                 =1     79
                 =1     80
                 =1     81     ;--------------------------------------------------------------------------
                 =1     82     ; 256-byte mapping table in code memory
                 =1     83     ; index = input value in A
                 =1     84     ; value = mapped output
                 =1     85     ;--------------------------------------------------------------------------
                 =1     86     map_table:
0049 FFFFFFFFFF  =1     87             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
0059 FFFFFFFFFF  =1     88             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
0069 FFFFFFFFFF  =1     89             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
0079 FFFFFFFFFF  =1     90             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
0089 FFFFFFFFFF  =1     91             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
0099 FFFFFFFFFF  =1     92             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
00A9 FFFFFFFFFF  =1     93             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
00B9 FFFFFFFFFF  =1     94             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 80h,  0FFh, 0FFh, 0FFh, 40h,  0FFh, 20h,  10h,
     FFFF80FFFF
     FF40FF2010
     FF
00C9 FFFFFFFFFF  =1     95             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
00D9 FFFFFFFFFF  =1     96             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
00E9 FFFFFFFFFF  =1     97             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
00F9 FFFFFFFFFF  =1     98             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0F0h, 0FFh, 0FFh, 0FFh, 09h,  0FFh, 06h,  03h,
     FFFFF0FFFF
     FF09FF0603
     FF
0109 FFFFFFFFFF  =1     99             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
0119 FFFFFFFFFF  =1    100             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 00h,  0FFh, 0FFh, 0FFh, 08h,  0FFh, 05h,  02h,
     FFFF00FFFF
     FF08FF0502
     FF
0129 FFFFFFFFFF  =1    101             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 07h,  0FFh, 04h,  01h,
     FFFFFFFFFF
     FF07FF0401
     FF
0139 FFFFFFFFFF  =1    102             DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh,
     FFFFFFFFFF
     FFFFFFFFFF
     FF
                 =1    103     include 'calculator.asm'
                 =1    104     init_calculator:
  0028           =1    105             display EQU     0x28
0149 850028      =1    106             MOV     display,0
                 =1    107
                 =1    108     ;--------------------------------------------------------------------------
                 =1    109     ; Reads numbers until an action key is pressed
                 =1    110     ; Outputs:
                 =1    111     ;       A: The read number
                 =1    112     ;       B: The action key terminating the input (see keypad)
                 =1    113     ;--------------------------------------------------------------------------
                 =1    114     read_number:
  0029           =1    115             num     EQU     0x29
014C 850029      =1    116             MOV     num,    0
                 =1    117     calculator_read_number_loop:
014F 1117        =1    118             CALL    read_keypad
0151 F8          =1    119             MOV     R0,     A
0152 54F0        =1    120             ANL     A,      #0F0H
0154 700B        =1    121             JNZ     calculator_ret ; Actions are not 0 -> handle end of number reading
0156 E529        =1    122             MOV     A,      num
0158 75F00A      =1    123             MOV     B,      #10d
015B A4          =1    124             MUL     AB
015C 28          =1    125             ADD     A,      R0
015D F529        =1    126             MOV     num,    A
015F 80EE        =1    127             JMP     calculator_read_number_loop
                 =1    128     calculator_ret:
0161 E529        =1    129             MOV     A,      num
0163 88F0        =1    130             MOV     B,      R0
0165 22          =1    131             RET
                       132     ending:
                       133     end
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CALCULATOR_READ_NUMBER_LOOP. . . . .  C  ADDR  014FH
CALCULATOR_RET . . . . . . . . . . .  C  ADDR  0161H
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DISPLAY. . . . . . . . . . . . . . .  N  NUMB  0028H
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ENDING . . . . . . . . . . . . . . .  C  ADDR  0166H
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
I. . . . . . . . . . . . . . . . . .  N  NUMB  0023H
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INIT_CALCULATOR. . . . . . . . . . .  C  ADDR  0149H
INIT_KEYPAD. . . . . . . . . . . . .  C  ADDR  0013H
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
KEYPAD_LINE_LOOP . . . . . . . . . .  C  ADDR  0020H
KEYPAD_MAP_VALUE . . . . . . . . . .  C  ADDR  0037H
KEYPAD_RETURN. . . . . . . . . . . .  C  ADDR  0041H
LAST . . . . . . . . . . . . . . . .  N  NUMB  0021H
MAP_TABLE. . . . . . . . . . . . . .  C  ADDR  0049H
MAP_VALUE. . . . . . . . . . . . . .  C  ADDR  0044H
MASK . . . . . . . . . . . . . . . .  N  NUMB  0022H
NUM. . . . . . . . . . . . . . . . .  N  NUMB  0029H
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H  NOT USED
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H  NOT USED
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H  NOT USED
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
READ . . . . . . . . . . . . . . . .  C  ADDR  0006H
READ_KEYPAD. . . . . . . . . . . . .  C  ADDR  0017H
READ_NUMBER. . . . . . . . . . . . .  C  ADDR  014CH
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED